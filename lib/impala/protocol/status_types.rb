#
# Autogenerated by Thrift Compiler (0.9.3)
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#

require 'thrift'

module Impala
  module Protocol
    module TStatusCode
      OK = 0
      CANCELLED = 1
      ANALYSIS_ERROR = 2
      NOT_IMPLEMENTED_ERROR = 3
      RUNTIME_ERROR = 4
      MEM_LIMIT_EXCEEDED = 5
      INTERNAL_ERROR = 6
      VALUE_MAP = {0 => "OK", 1 => "CANCELLED", 2 => "ANALYSIS_ERROR", 3 => "NOT_IMPLEMENTED_ERROR", 4 => "RUNTIME_ERROR", 5 => "MEM_LIMIT_EXCEEDED", 6 => "INTERNAL_ERROR"}
      VALID_VALUES = Set.new([OK, CANCELLED, ANALYSIS_ERROR, NOT_IMPLEMENTED_ERROR, RUNTIME_ERROR, MEM_LIMIT_EXCEEDED, INTERNAL_ERROR]).freeze
    end

    class TStatus
      include ::Thrift::Struct, ::Thrift::Struct_Union
      STATUS_CODE = 1
      ERROR_MSGS = 2

      FIELDS = {
        STATUS_CODE => {:type => ::Thrift::Types::I32, :name => 'status_code', :enum_class => ::Impala::Protocol::TStatusCode},
        ERROR_MSGS => {:type => ::Thrift::Types::LIST, :name => 'error_msgs', :element => {:type => ::Thrift::Types::STRING}}
      }

      def struct_fields; FIELDS; end

      def validate
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field status_code is unset!') unless @status_code
        unless @status_code.nil? || ::Impala::Protocol::TStatusCode::VALID_VALUES.include?(@status_code)
          raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field status_code!')
        end
      end

      ::Thrift::Struct.generate_accessors self
    end

  end
end
