#
# Autogenerated by Thrift Compiler (0.9.3)
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#

require 'thrift'
require 't_c_l_i_service'
require 'impala_service_types'

module Impala
  module Protocol
    module ImpalaHiveServer2Service
      class Client < ::Impala::Protocol::TCLIService::Client 
        include ::Thrift::Client

        def GetExecSummary(req)
          send_GetExecSummary(req)
          return recv_GetExecSummary()
        end

        def send_GetExecSummary(req)
          send_message('GetExecSummary', GetExecSummary_args, :req => req)
        end

        def recv_GetExecSummary()
          result = receive_message(GetExecSummary_result)
          return result.success unless result.success.nil?
          raise ::Thrift::ApplicationException.new(::Thrift::ApplicationException::MISSING_RESULT, 'GetExecSummary failed: unknown result')
        end

        def GetRuntimeProfile(req)
          send_GetRuntimeProfile(req)
          return recv_GetRuntimeProfile()
        end

        def send_GetRuntimeProfile(req)
          send_message('GetRuntimeProfile', GetRuntimeProfile_args, :req => req)
        end

        def recv_GetRuntimeProfile()
          result = receive_message(GetRuntimeProfile_result)
          return result.success unless result.success.nil?
          raise ::Thrift::ApplicationException.new(::Thrift::ApplicationException::MISSING_RESULT, 'GetRuntimeProfile failed: unknown result')
        end

      end

      class Processor < ::Impala::Protocol::TCLIService::Processor 
        include ::Thrift::Processor

        def process_GetExecSummary(seqid, iprot, oprot)
          args = read_args(iprot, GetExecSummary_args)
          result = GetExecSummary_result.new()
          result.success = @handler.GetExecSummary(args.req)
          write_result(result, oprot, 'GetExecSummary', seqid)
        end

        def process_GetRuntimeProfile(seqid, iprot, oprot)
          args = read_args(iprot, GetRuntimeProfile_args)
          result = GetRuntimeProfile_result.new()
          result.success = @handler.GetRuntimeProfile(args.req)
          write_result(result, oprot, 'GetRuntimeProfile', seqid)
        end

      end

      # HELPER FUNCTIONS AND STRUCTURES

      class GetExecSummary_args
        include ::Thrift::Struct, ::Thrift::Struct_Union
        REQ = 1

        FIELDS = {
          REQ => {:type => ::Thrift::Types::STRUCT, :name => 'req', :class => ::Impala::Protocol::TGetExecSummaryReq}
        }

        def struct_fields; FIELDS; end

        def validate
        end

        ::Thrift::Struct.generate_accessors self
      end

      class GetExecSummary_result
        include ::Thrift::Struct, ::Thrift::Struct_Union
        SUCCESS = 0

        FIELDS = {
          SUCCESS => {:type => ::Thrift::Types::STRUCT, :name => 'success', :class => ::Impala::Protocol::TGetExecSummaryResp}
        }

        def struct_fields; FIELDS; end

        def validate
        end

        ::Thrift::Struct.generate_accessors self
      end

      class GetRuntimeProfile_args
        include ::Thrift::Struct, ::Thrift::Struct_Union
        REQ = 1

        FIELDS = {
          REQ => {:type => ::Thrift::Types::STRUCT, :name => 'req', :class => ::Impala::Protocol::TGetRuntimeProfileReq}
        }

        def struct_fields; FIELDS; end

        def validate
        end

        ::Thrift::Struct.generate_accessors self
      end

      class GetRuntimeProfile_result
        include ::Thrift::Struct, ::Thrift::Struct_Union
        SUCCESS = 0

        FIELDS = {
          SUCCESS => {:type => ::Thrift::Types::STRUCT, :name => 'success', :class => ::Impala::Protocol::TGetRuntimeProfileResp}
        }

        def struct_fields; FIELDS; end

        def validate
        end

        ::Thrift::Struct.generate_accessors self
      end

    end

  end
end
